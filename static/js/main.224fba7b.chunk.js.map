{"version":3,"sources":["components/News.js","App.js","reportWebVitals.js","index.js"],"names":["News","props","useState","info","setInfo","search","setSearch","display","setDisplay","className","onClick","fetch","then","response","json","console","log","articles","catch","err","type","name","id","onChange","e","target","value","length","newinfo","filter","x","i","description","includes","placeholder","map","article","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAyGeA,EAvGF,SAACC,GAAW,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,OAEQF,mBAAS,IAFjB,mBAEbG,EAFa,KAELC,EAFK,OAGUJ,mBAAS,IAHnB,mBAGbK,EAHa,KAGJC,EAHI,KA2EhB,OAEA,qBAAKC,UAAY,YAAjB,SACI,sBAAKA,UAAU,YAAf,UACI,qDACA,wBAAQA,UAAY,OAAMC,QAzEtB,WACZC,MAAM,2FACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZT,EAAQS,EAASI,UACjBT,EAAWK,EAASI,aAEvBC,OAAM,SAAAC,GACHJ,QAAQC,IAAIG,OAgEZ,wBACA,sBAAKV,UAAU,oBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,aAAf,SACI,uBAAOW,KAAK,OAAOC,KAAK,GAAGC,GAAG,GAAGb,UAAU,eAAgBc,SA7C7D,SAACC,GACnBlB,EAAUkB,EAAEC,OAAOC,OACnBf,MAAM,2FACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAGF,GAFAE,QAAQC,IAAIH,GAETR,EAAOsB,OAAQ,EAAE,CAChB,IAAIC,EAAUzB,EAAK0B,QAAO,SAACC,EAAEC,GACzB,GAA2B,MAAvB5B,EAAK4B,GAAGC,YACR,OAAOF,EAAEE,YAAYC,SAAS5B,MAGtCG,EAAWoB,OAIlBV,OAAM,SAAAC,GACHJ,QAAQC,IAAIG,OA2BqFe,YAAc,2BAG1G3B,EAAQ4B,KAAI,SAACC,EAASL,GACvB,OAAO,qBAAKtB,UAAY,iBAAjB,SACH,6BAAK2B,EAAQJ,eAD+BD,eC9ErDM,MATf,WACE,OACE,qBAAK5B,UAAU,MAAf,SAEE,cAAC,EAAD,OCKS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.224fba7b.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst News = (props) => {\n    const [info, setInfo] = useState([]);\n    const [search, setSearch] = useState(\"\")\n    const [display, setDisplay] = useState([])\n\n    \n\n    const getNews = ()=> {\n        fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=dc3063ef0bce4718a88a3ac000ec7448')\n            .then(response => response.json())\n            .then(response => {\n                console.log(response)\n                setInfo(response.articles)\n                setDisplay(response.articles)\n            })\n            .catch(err=> {\n                console.log(err)\n            })\n    }\n\n    // useEffect(()=>{\n    //     console.log(\"search term is:\", search)\n    //     console.log(info)\n    //     if(info[0] != undefined){\n    //         console.log(\"okay now we safe\")\n    //         console.log(info[0].description)\n    //         let newinfo = info.filter((x,i) => {\n    //             if (info[i].description != null){\n    //                 return x.description.includes(search)\n    //             }\n                \n    //         })\n    //         setInfo(newinfo)\n    //         setDisplay(newinfo)\n    //     }\n        \n    //     // setInfo(info.filter(article => article.description.includes(search)))\n    // }, [search])\n\n    const changeHandler = (e)=>{\n        setSearch(e.target.value)\n        fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=dc3063ef0bce4718a88a3ac000ec7448')\n            .then(response => response.json())\n            .then(response => {\n                console.log(response)\n                // setInfo(response.articles)\n                if(search.length >0){\n                    let newinfo = info.filter((x,i) => {\n                        if (info[i].description != null){\n                            return x.description.includes(search)\n                        }   \n                    })\n                    setDisplay(newinfo)\n                }\n                \n            })\n            .catch(err=> {\n                console.log(err)\n            })\n\n    }\n\n    // useEffect(()=>{\n    //     fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=dc3063ef0bce4718a88a3ac000ec7448')\n    //         .then(response => response.json())\n    //         .then(response => {\n    //             console.log(response)\n    //             setInfo(response.articles)\n    //         })\n        \n    // }, [])\n\n    \n\n    \n        return (\n\n        <div className = \"container\">\n            <div className=\"jumbotron\">\n                <h1>News from this week</h1>\n                <button className = \"mb-3\"onClick= {getNews}>Fetch News</button>\n                <div className=\"row is-scrollable\">\n                    <div className=\"col-sm-8\">\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"\" id=\"\" className=\"form-control\"  onChange = {changeHandler}placeholder = \"Search articles...\"/>\n                        </div>\n                    </div>\n                    {display.map((article, i)=>{\n                    return <div className = \"card mb-2 p-3 \" key = {i}>\n                        <h5>{article.description}</h5>\n                        </div>\n                })}\n                </div>\n                \n                \n            </div>\n            \n        </div>\n    );\n    }\n\n    \n\nexport default News;\n\n// const getPokemon=()=>{\n//     fetch('https://pokeapi.co/api/v2/pokemon?limit=807')\n//         .then(response => response.json())\n//         .then(response => setPokemon(response.results))\n// };\n\n// return (\n//     <div style={{textAlign:\"center\", width:300, marginLeft:600}}>\n//         <button onClick={getPokemon}>Fetch Pokemon</button>\n//         <ul style={{textAlign:\"center\"}}>\n//         {pokemon.length > 0 && pokemon.map((mon, index)=>{\n//             return (<li key={index}>{index+1}  {mon.name}</li>)\n//         })}\n//         </ul>\n//     </div>\n// );\n// }","\nimport News from './components/News';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <News></News>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}